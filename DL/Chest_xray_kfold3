{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":23812,"sourceType":"datasetVersion","datasetId":17810}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import torch\nimport torch.nn as nn\nimport torch.optim\nimport torchvision\nfrom torchvision import datasets, transforms\nimport torchvision.models as models\nfrom torchvision.models import resnet18, ResNet18_Weights\nfrom torch.utils.data import DataLoader, random_split, Subset\n\nfrom sklearn.model_selection import StratifiedKFold\n\nfrom torchmetrics.classification import Accuracy","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:04.900036Z","iopub.execute_input":"2025-08-21T17:31:04.900512Z","iopub.status.idle":"2025-08-21T17:31:16.706932Z","shell.execute_reply.started":"2025-08-21T17:31:04.900485Z","shell.execute_reply":"2025-08-21T17:31:16.706121Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"device= torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\ndevice","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:16.707683Z","iopub.execute_input":"2025-08-21T17:31:16.708104Z","iopub.status.idle":"2025-08-21T17:31:16.793423Z","shell.execute_reply.started":"2025-08-21T17:31:16.708082Z","shell.execute_reply":"2025-08-21T17:31:16.792605Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"device(type='cuda')"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"train_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.RandomHorizontalFlip(),\n    transforms.RandomRotation(10),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])\n\nval_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])\n\ntest_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:16.795535Z","iopub.execute_input":"2025-08-21T17:31:16.795824Z","iopub.status.idle":"2025-08-21T17:31:16.808402Z","shell.execute_reply.started":"2025-08-21T17:31:16.795801Z","shell.execute_reply":"2025-08-21T17:31:16.807785Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"!ls /kaggle/input/chest-xray-pneumonia","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:16.811079Z","iopub.execute_input":"2025-08-21T17:31:16.811267Z","iopub.status.idle":"2025-08-21T17:31:16.956779Z","shell.execute_reply.started":"2025-08-21T17:31:16.811252Z","shell.execute_reply":"2025-08-21T17:31:16.956078Z"}},"outputs":[{"name":"stdout","text":"chest_xray\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"!pwd","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:16.957722Z","iopub.execute_input":"2025-08-21T17:31:16.957966Z","iopub.status.idle":"2025-08-21T17:31:17.087161Z","shell.execute_reply.started":"2025-08-21T17:31:16.957944Z","shell.execute_reply":"2025-08-21T17:31:17.086432Z"}},"outputs":[{"name":"stdout","text":"/kaggle/working\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"full_train_dir= \"/kaggle/input/chest-xray-pneumonia/chest_xray/train\"\nfull_train= datasets.ImageFolder(root=full_train_dir, transform= train_transform)\nfull_train_val= datasets.ImageFolder(root=full_train_dir, transform= val_transform)\n\nlabels = [s[1] for s in full_train.samples]\n\ntest_dir= \"/kaggle/input/chest-xray-pneumonia/chest_xray/test\"\ntest_set= datasets.ImageFolder(root=test_dir, transform= test_transform)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:17.088072Z","iopub.execute_input":"2025-08-21T17:31:17.088272Z","iopub.status.idle":"2025-08-21T17:31:27.452935Z","shell.execute_reply.started":"2025-08-21T17:31:17.088252Z","shell.execute_reply":"2025-08-21T17:31:27.452148Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"model= models.resnet18(weights=None)\nmodel.fc= nn.Sequential(\n    nn.Linear(model.fc.in_features, 512),\n    nn.ReLU(),\n    nn.Dropout(0.4),\n    nn.Linear(512,2)\n)\nmodel=model.to(device)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:27.453728Z","iopub.execute_input":"2025-08-21T17:31:27.453967Z","iopub.status.idle":"2025-08-21T17:31:27.839749Z","shell.execute_reply.started":"2025-08-21T17:31:27.453950Z","shell.execute_reply":"2025-08-21T17:31:27.839182Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"def train(dataloader, model, loss_function, optimizer):\n    model.train()\n    total_loss=0\n\n    for batch, (image, label) in enumerate(dataloader):\n        image, label= image.to(device), label.to(device)\n        prediction= model(image)\n        loss= loss_function(prediction, label)\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n\n        total_loss+= loss\n    avg_loss= total_loss/len(dataloader)\n    print(f\"Training Average Loss: {avg_loss:.4f}\")\n\n    \n        ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:27.841622Z","iopub.execute_input":"2025-08-21T17:31:27.841925Z","iopub.status.idle":"2025-08-21T17:31:27.846785Z","shell.execute_reply.started":"2025-08-21T17:31:27.841905Z","shell.execute_reply":"2025-08-21T17:31:27.846083Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"val_accuracy= Accuracy(task=\"multiclass\", num_classes=2).to(device)\n\ndef validate(dataloader, model, loss_function):\n    model.eval()\n    total_loss=0\n    val_accuracy.reset()\n\n    with torch.no_grad():\n        for image, label in dataloader:\n            image, label= image.to(device), label.to(device)\n            prediction= model(image)\n            loss= loss_function(prediction, label)\n            total_loss+= loss\n\n            val_accuracy.update(prediction, label)\n            \n        avg_loss= total_loss/ len(dataloader)\n        accuracy= val_accuracy.compute()*100\n        print(f\"Validation Loss: {avg_loss:.4f}\")\n        print(f\"Validation Accuracy: {accuracy:.2f}\")\n\n    return accuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:27.847536Z","iopub.execute_input":"2025-08-21T17:31:27.848259Z","iopub.status.idle":"2025-08-21T17:31:27.866366Z","shell.execute_reply.started":"2025-08-21T17:31:27.848234Z","shell.execute_reply":"2025-08-21T17:31:27.865788Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"test_accuracy= Accuracy(task=\"multiclass\", num_classes=2).to(device)\n\ndef test(dataloader, model, loss_function):\n    model.eval()\n    total_loss=0\n    val_accuracy.reset()\n\n    with torch.no_grad():\n        for image, label in dataloader:\n            image= image.to(device)  # shape: (batch_size, C, H, W)\n            label= label.to(device)  # shape: (batch_size,)\n            prediction= model(image)\n            loss= loss_function(prediction, label)\n            total_loss+= loss\n\n            test_accuracy.update(prediction, label)\n\n        avg_loss= total_loss/ len(dataloader)\n        accuracy= test_accuracy.compute()*100\n    print(f\"Test Loss: {avg_loss:.4f}\")\n    print(f\"Test Accuracy: {accuracy:.2f}\")\n\n    return accuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:27.867034Z","iopub.execute_input":"2025-08-21T17:31:27.867359Z","iopub.status.idle":"2025-08-21T17:31:27.874114Z","shell.execute_reply.started":"2025-08-21T17:31:27.867332Z","shell.execute_reply":"2025-08-21T17:31:27.873371Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"epochs=15\n\nskf= StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\nfor fold, (train_idx, val_idx) in enumerate(skf.split(full_train.samples, labels)):\n    print(f\"\\n--------------Fold {fold+1}------------\")\n    print(f\"Train size: {len(train_idx)}, Val size: {len(val_idx)}\")\n\n    train_subset= Subset(full_train, train_idx)\n    val_subset= Subset(full_train_val, val_idx)\n\n    train_loader= DataLoader(train_subset, batch_size=64, shuffle=True, num_workers=2)\n    val_loader= DataLoader(val_subset, batch_size=64, shuffle=False, num_workers=2)\n\n    loss_function= nn.CrossEntropyLoss()\n    optimizer= torch.optim.Adam(model.parameters(), lr=0.0001, weight_decay=1e-4)\n    scheduler= torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode=\"max\", factor=0.5, patience= 3)\n\n    best_val_acc= 0.0\n\n    for epoch in range(epochs):\n        print(f\"Epoch {epoch+1}/{epochs}\")\n        train(train_loader, model, loss_function, optimizer)\n        val_acc= validate(val_loader, model, loss_function)\n        scheduler.step(val_acc)\n\n        if val_acc > best_val_acc:\n            best_val_acc= val_acc\n    print(f\"Best Validation Accuracy in Fold {fold+1}: {best_val_acc:.2f}%\")\n    print(f\"-----------------------------------------------------------------\")\n\n\nprint(\"\\n\")\ntest_loader= DataLoader(test_set, batch_size=64, shuffle=False, num_workers=2)\ntest(test_loader, model, loss_function)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-21T17:31:27.874867Z","iopub.execute_input":"2025-08-21T17:31:27.875094Z","iopub.status.idle":"2025-08-21T18:27:44.811558Z","shell.execute_reply.started":"2025-08-21T17:31:27.875072Z","shell.execute_reply":"2025-08-21T18:27:44.810893Z"}},"outputs":[{"name":"stdout","text":"\n--------------Fold 1------------\nTrain size: 4172, Val size: 1044\nEpoch 1/15\nTraining Average Loss: 0.2260\nValidation Loss: 0.4962\nValidation Accuracy: 82.38\nEpoch 2/15\nTraining Average Loss: 0.1259\nValidation Loss: 0.0920\nValidation Accuracy: 96.93\nEpoch 3/15\nTraining Average Loss: 0.0919\nValidation Loss: 0.0855\nValidation Accuracy: 97.41\nEpoch 4/15\nTraining Average Loss: 0.0906\nValidation Loss: 0.0877\nValidation Accuracy: 96.36\nEpoch 5/15\nTraining Average Loss: 0.0722\nValidation Loss: 0.0765\nValidation Accuracy: 97.22\nEpoch 6/15\nTraining Average Loss: 0.0743\nValidation Loss: 0.2082\nValidation Accuracy: 92.62\nEpoch 7/15\nTraining Average Loss: 0.0637\nValidation Loss: 0.0730\nValidation Accuracy: 97.41\nEpoch 8/15\nTraining Average Loss: 0.0513\nValidation Loss: 0.0648\nValidation Accuracy: 97.41\nEpoch 9/15\nTraining Average Loss: 0.0582\nValidation Loss: 0.1463\nValidation Accuracy: 94.44\nEpoch 10/15\nTraining Average Loss: 0.0559\nValidation Loss: 0.0693\nValidation Accuracy: 97.22\nEpoch 11/15\nTraining Average Loss: 0.0480\nValidation Loss: 0.0734\nValidation Accuracy: 97.32\nEpoch 12/15\nTraining Average Loss: 0.0388\nValidation Loss: 0.0536\nValidation Accuracy: 98.18\nEpoch 13/15\nTraining Average Loss: 0.0364\nValidation Loss: 0.0598\nValidation Accuracy: 97.89\nEpoch 14/15\nTraining Average Loss: 0.0311\nValidation Loss: 0.0515\nValidation Accuracy: 97.89\nEpoch 15/15\nTraining Average Loss: 0.0302\nValidation Loss: 0.0487\nValidation Accuracy: 98.56\nBest Validation Accuracy in Fold 1: 98.56%\n-----------------------------------------------------------------\n\n--------------Fold 2------------\nTrain size: 4173, Val size: 1043\nEpoch 1/15\nTraining Average Loss: 0.0559\nValidation Loss: 0.0461\nValidation Accuracy: 98.37\nEpoch 2/15\nTraining Average Loss: 0.0678\nValidation Loss: 0.0720\nValidation Accuracy: 96.55\nEpoch 3/15\nTraining Average Loss: 0.0516\nValidation Loss: 0.1155\nValidation Accuracy: 96.93\nEpoch 4/15\nTraining Average Loss: 0.0487\nValidation Loss: 0.0442\nValidation Accuracy: 98.27\nEpoch 5/15\nTraining Average Loss: 0.0434\nValidation Loss: 0.2698\nValidation Accuracy: 92.81\nEpoch 6/15\nTraining Average Loss: 0.0353\nValidation Loss: 0.0423\nValidation Accuracy: 97.99\nEpoch 7/15\nTraining Average Loss: 0.0287\nValidation Loss: 0.0382\nValidation Accuracy: 99.23\nEpoch 8/15\nTraining Average Loss: 0.0297\nValidation Loss: 0.0250\nValidation Accuracy: 99.23\nEpoch 9/15\nTraining Average Loss: 0.0355\nValidation Loss: 0.0281\nValidation Accuracy: 98.85\nEpoch 10/15\nTraining Average Loss: 0.0309\nValidation Loss: 0.0310\nValidation Accuracy: 98.95\nEpoch 11/15\nTraining Average Loss: 0.0293\nValidation Loss: 0.0246\nValidation Accuracy: 99.14\nEpoch 12/15\nTraining Average Loss: 0.0169\nValidation Loss: 0.0259\nValidation Accuracy: 99.04\nEpoch 13/15\nTraining Average Loss: 0.0233\nValidation Loss: 0.0250\nValidation Accuracy: 99.04\nEpoch 14/15\nTraining Average Loss: 0.0164\nValidation Loss: 0.0312\nValidation Accuracy: 99.04\nEpoch 15/15\nTraining Average Loss: 0.0122\nValidation Loss: 0.0243\nValidation Accuracy: 99.14\nBest Validation Accuracy in Fold 2: 99.23%\n-----------------------------------------------------------------\n\n--------------Fold 3------------\nTrain size: 4173, Val size: 1043\nEpoch 1/15\nTraining Average Loss: 0.0368\nValidation Loss: 0.1217\nValidation Accuracy: 95.11\nEpoch 2/15\nTraining Average Loss: 0.0398\nValidation Loss: 0.0369\nValidation Accuracy: 98.56\nEpoch 3/15\nTraining Average Loss: 0.0254\nValidation Loss: 0.0381\nValidation Accuracy: 98.66\nEpoch 4/15\nTraining Average Loss: 0.0241\nValidation Loss: 0.1041\nValidation Accuracy: 96.64\nEpoch 5/15\nTraining Average Loss: 0.0326\nValidation Loss: 0.0529\nValidation Accuracy: 98.08\nEpoch 6/15\nTraining Average Loss: 0.0302\nValidation Loss: 0.1201\nValidation Accuracy: 95.30\nEpoch 7/15\nTraining Average Loss: 0.0315\nValidation Loss: 0.0376\nValidation Accuracy: 98.85\nEpoch 8/15\nTraining Average Loss: 0.0276\nValidation Loss: 0.0356\nValidation Accuracy: 98.56\nEpoch 9/15\nTraining Average Loss: 0.0315\nValidation Loss: 0.0589\nValidation Accuracy: 97.79\nEpoch 10/15\nTraining Average Loss: 0.0336\nValidation Loss: 0.0499\nValidation Accuracy: 98.56\nEpoch 11/15\nTraining Average Loss: 0.0249\nValidation Loss: 0.0679\nValidation Accuracy: 98.27\nEpoch 12/15\nTraining Average Loss: 0.0185\nValidation Loss: 0.0353\nValidation Accuracy: 98.75\nEpoch 13/15\nTraining Average Loss: 0.0101\nValidation Loss: 0.0614\nValidation Accuracy: 97.89\nEpoch 14/15\nTraining Average Loss: 0.0117\nValidation Loss: 0.0317\nValidation Accuracy: 98.85\nEpoch 15/15\nTraining Average Loss: 0.0189\nValidation Loss: 0.0337\nValidation Accuracy: 98.95\nBest Validation Accuracy in Fold 3: 98.95%\n-----------------------------------------------------------------\n\n--------------Fold 4------------\nTrain size: 4173, Val size: 1043\nEpoch 1/15\nTraining Average Loss: 0.0285\nValidation Loss: 0.0139\nValidation Accuracy: 99.62\nEpoch 2/15\nTraining Average Loss: 0.0462\nValidation Loss: 0.0271\nValidation Accuracy: 99.23\nEpoch 3/15\nTraining Average Loss: 0.0442\nValidation Loss: 0.0148\nValidation Accuracy: 99.52\nEpoch 4/15\nTraining Average Loss: 0.0194\nValidation Loss: 0.0093\nValidation Accuracy: 99.62\nEpoch 5/15\nTraining Average Loss: 0.0278\nValidation Loss: 0.0371\nValidation Accuracy: 98.47\nEpoch 6/15\nTraining Average Loss: 0.0247\nValidation Loss: 0.0146\nValidation Accuracy: 99.42\nEpoch 7/15\nTraining Average Loss: 0.0294\nValidation Loss: 0.0146\nValidation Accuracy: 99.71\nEpoch 8/15\nTraining Average Loss: 0.0221\nValidation Loss: 0.0148\nValidation Accuracy: 99.42\nEpoch 9/15\nTraining Average Loss: 0.0205\nValidation Loss: 0.0109\nValidation Accuracy: 99.71\nEpoch 10/15\nTraining Average Loss: 0.0135\nValidation Loss: 0.0117\nValidation Accuracy: 99.71\nEpoch 11/15\nTraining Average Loss: 0.0139\nValidation Loss: 0.0116\nValidation Accuracy: 99.42\nEpoch 12/15\nTraining Average Loss: 0.0112\nValidation Loss: 0.0084\nValidation Accuracy: 99.52\nEpoch 13/15\nTraining Average Loss: 0.0079\nValidation Loss: 0.0136\nValidation Accuracy: 99.52\nEpoch 14/15\nTraining Average Loss: 0.0072\nValidation Loss: 0.0089\nValidation Accuracy: 99.71\nEpoch 15/15\nTraining Average Loss: 0.0065\nValidation Loss: 0.0063\nValidation Accuracy: 99.81\nBest Validation Accuracy in Fold 4: 99.81%\n-----------------------------------------------------------------\n\n--------------Fold 5------------\nTrain size: 4173, Val size: 1043\nEpoch 1/15\nTraining Average Loss: 0.0227\nValidation Loss: 0.0274\nValidation Accuracy: 98.95\nEpoch 2/15\nTraining Average Loss: 0.0224\nValidation Loss: 0.0169\nValidation Accuracy: 99.33\nEpoch 3/15\nTraining Average Loss: 0.0192\nValidation Loss: 0.0098\nValidation Accuracy: 99.71\nEpoch 4/15\nTraining Average Loss: 0.0173\nValidation Loss: 0.0136\nValidation Accuracy: 99.42\nEpoch 5/15\nTraining Average Loss: 0.0264\nValidation Loss: 0.0820\nValidation Accuracy: 97.12\nEpoch 6/15\nTraining Average Loss: 0.0273\nValidation Loss: 0.0433\nValidation Accuracy: 98.56\nEpoch 7/15\nTraining Average Loss: 0.0326\nValidation Loss: 0.0279\nValidation Accuracy: 98.75\nEpoch 8/15\nTraining Average Loss: 0.0177\nValidation Loss: 0.0208\nValidation Accuracy: 99.04\nEpoch 9/15\nTraining Average Loss: 0.0126\nValidation Loss: 0.0108\nValidation Accuracy: 99.42\nEpoch 10/15\nTraining Average Loss: 0.0089\nValidation Loss: 0.0114\nValidation Accuracy: 99.42\nEpoch 11/15\nTraining Average Loss: 0.0052\nValidation Loss: 0.0123\nValidation Accuracy: 99.62\nEpoch 12/15\nTraining Average Loss: 0.0052\nValidation Loss: 0.0079\nValidation Accuracy: 99.81\nEpoch 13/15\nTraining Average Loss: 0.0049\nValidation Loss: 0.0096\nValidation Accuracy: 99.62\nEpoch 14/15\nTraining Average Loss: 0.0050\nValidation Loss: 0.0073\nValidation Accuracy: 99.81\nEpoch 15/15\nTraining Average Loss: 0.0067\nValidation Loss: 0.0094\nValidation Accuracy: 99.62\nBest Validation Accuracy in Fold 5: 99.81%\n-----------------------------------------------------------------\n\n\nTest Loss: 1.2799\nTest Accuracy: 82.05\n","output_type":"stream"},{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"tensor(82.0513, device='cuda:0')"},"metadata":{}}],"execution_count":11}]}