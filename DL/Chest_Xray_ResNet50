{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":23812,"sourceType":"datasetVersion","datasetId":17810}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import torch\nimport torch.nn as nn\nimport torch.optim\nimport torchvision\nfrom torchvision import datasets, transforms\nimport torchvision.models as models\nfrom torchvision.models import resnet50, ResNet50_Weights\nfrom torch.utils.data import DataLoader, random_split\n\nfrom torchmetrics.classification import Accuracy","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:19.765228Z","iopub.execute_input":"2025-08-16T19:29:19.765505Z","iopub.status.idle":"2025-08-16T19:29:23.936854Z","shell.execute_reply.started":"2025-08-16T19:29:19.765485Z","shell.execute_reply":"2025-08-16T19:29:23.936088Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"device= torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\ndevice","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:25.217186Z","iopub.execute_input":"2025-08-16T19:29:25.217930Z","iopub.status.idle":"2025-08-16T19:29:25.304141Z","shell.execute_reply.started":"2025-08-16T19:29:25.217907Z","shell.execute_reply":"2025-08-16T19:29:25.303470Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"device(type='cuda')"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"train_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.RandomRotation(10),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])\n\nval_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])\n\ntest_transform= transforms.Compose([\n    transforms.Resize((224,224)),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:29.902152Z","iopub.execute_input":"2025-08-16T19:29:29.902422Z","iopub.status.idle":"2025-08-16T19:29:29.908251Z","shell.execute_reply.started":"2025-08-16T19:29:29.902401Z","shell.execute_reply":"2025-08-16T19:29:29.907509Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"!ls /kaggle/input/chest-xray-pneumonia","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:31.856957Z","iopub.execute_input":"2025-08-16T19:29:31.857204Z","iopub.status.idle":"2025-08-16T19:29:31.999545Z","shell.execute_reply.started":"2025-08-16T19:29:31.857186Z","shell.execute_reply":"2025-08-16T19:29:31.998699Z"}},"outputs":[{"name":"stdout","text":"chest_xray\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"!pwd","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:32.622026Z","iopub.execute_input":"2025-08-16T19:29:32.622583Z","iopub.status.idle":"2025-08-16T19:29:32.751326Z","shell.execute_reply.started":"2025-08-16T19:29:32.622553Z","shell.execute_reply":"2025-08-16T19:29:32.750688Z"}},"outputs":[{"name":"stdout","text":"/kaggle/working\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"train_dir= \"/kaggle/input/chest-xray-pneumonia/chest_xray/train\"\nval_dir= \"/kaggle/input/chest-xray-pneumonia/chest_xray/val\"\ntest_dir= \"/kaggle/input/chest-xray-pneumonia/chest_xray/test\"\n\ntrain_data= datasets.ImageFolder(root=train_dir, transform= train_transform)\nval_data= datasets.ImageFolder(root= val_dir, transform= val_transform)\ntest_data= datasets.ImageFolder(root= test_dir, transform= test_transform)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:29:34.943511Z","iopub.execute_input":"2025-08-16T19:29:34.944200Z","iopub.status.idle":"2025-08-16T19:29:39.163678Z","shell.execute_reply.started":"2025-08-16T19:29:34.944171Z","shell.execute_reply":"2025-08-16T19:29:39.162902Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"len(train_data), len(val_data), len(test_data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:34.050239Z","iopub.execute_input":"2025-08-16T19:30:34.050563Z","iopub.status.idle":"2025-08-16T19:30:34.055265Z","shell.execute_reply.started":"2025-08-16T19:30:34.050542Z","shell.execute_reply":"2025-08-16T19:30:34.054685Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"(5216, 16, 624)"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"train_loader= DataLoader(train_data, shuffle=True, batch_size=32, num_workers=2)\nval_loader= DataLoader(val_data, shuffle=False, batch_size=32, num_workers=2)\ntest_loader= DataLoader(test_data, shuffle=False, batch_size=32, num_workers=2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:34.655745Z","iopub.execute_input":"2025-08-16T19:30:34.656027Z","iopub.status.idle":"2025-08-16T19:30:34.660574Z","shell.execute_reply.started":"2025-08-16T19:30:34.656008Z","shell.execute_reply":"2025-08-16T19:30:34.659837Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"for image, label in train_loader:\n    print(image.shape, label.shape)\n    break","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:37.326879Z","iopub.execute_input":"2025-08-16T19:30:37.327441Z","iopub.status.idle":"2025-08-16T19:30:39.018259Z","shell.execute_reply.started":"2025-08-16T19:30:37.327416Z","shell.execute_reply":"2025-08-16T19:30:39.017511Z"}},"outputs":[{"name":"stdout","text":"torch.Size([32, 3, 224, 224]) torch.Size([32])\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"model= models.resnet50(weights=None)\nmodel=model.to(device)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:39.019713Z","iopub.execute_input":"2025-08-16T19:30:39.019963Z","iopub.status.idle":"2025-08-16T19:30:39.632224Z","shell.execute_reply.started":"2025-08-16T19:30:39.019941Z","shell.execute_reply":"2025-08-16T19:30:39.631701Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"model.fc= nn.Linear(model.fc.in_features, 2).to(device)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:39.632882Z","iopub.execute_input":"2025-08-16T19:30:39.633081Z","iopub.status.idle":"2025-08-16T19:30:39.637604Z","shell.execute_reply.started":"2025-08-16T19:30:39.633062Z","shell.execute_reply":"2025-08-16T19:30:39.636938Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"loss_function= nn.CrossEntropyLoss()\noptimizer= torch.optim.Adam(model.parameters(), lr=0.0001, weight_decay=1e-4)\nscheduler= torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode=\"max\", factor=0.5, patience= 5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:39.638752Z","iopub.execute_input":"2025-08-16T19:30:39.638917Z","iopub.status.idle":"2025-08-16T19:30:39.651220Z","shell.execute_reply.started":"2025-08-16T19:30:39.638904Z","shell.execute_reply":"2025-08-16T19:30:39.650652Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"def train(dataloader, model, loss_function, optimizer):\n    model.train()\n    total_loss=0\n\n    for batch, (image, label) in enumerate(dataloader):\n        image, label= image.to(device), label.to(device)\n        prediction= model(image)\n        loss= loss_function(prediction, label)\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n\n        total_loss+= loss\n    avg_loss= total_loss/len(dataloader)\n    print(f\"Training Average Loss: {avg_loss:.4f}\")\n\n    \n        ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:39.855695Z","iopub.execute_input":"2025-08-16T19:30:39.856148Z","iopub.status.idle":"2025-08-16T19:30:39.861025Z","shell.execute_reply.started":"2025-08-16T19:30:39.856129Z","shell.execute_reply":"2025-08-16T19:30:39.860302Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"val_accuracy= Accuracy(task=\"multiclass\", num_classes=2).to(device)\n\ndef validate(dataloader, model, loss_function):\n    model.eval()\n    total_loss=0\n    val_accuracy.reset()\n\n    with torch.no_grad():\n        for image, label in dataloader:\n            image, label= image.to(device), label.to(device)\n            prediction= model(image)\n            loss= loss_function(prediction, label)\n            total_loss+= loss\n\n            val_accuracy.update(prediction, label)\n            \n        avg_loss= total_loss/ len(dataloader)\n        accuracy= val_accuracy.compute()*100\n        print(f\"Validation Loss: {avg_loss:.4f}\")\n        print(f\"Validation Accuracy: {accuracy:.2f}\")\n\n    return accuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:40.035149Z","iopub.execute_input":"2025-08-16T19:30:40.035379Z","iopub.status.idle":"2025-08-16T19:30:40.046411Z","shell.execute_reply.started":"2025-08-16T19:30:40.035362Z","shell.execute_reply":"2025-08-16T19:30:40.045699Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"test_accuracy= Accuracy(task=\"multiclass\", num_classes=2).to(device)\n\ndef test(dataloader, model, loss_function):\n    model.eval()\n    total_loss=0\n    val_accuracy.reset()\n\n    with torch.no_grad():\n        for image, label in dataloader:\n            image= image.to(device)  # shape: (batch_size, C, H, W)\n            label= label.to(device)  # shape: (batch_size,)\n            prediction= model(image)\n            loss= loss_function(prediction, label)\n            total_loss+= loss\n\n            test_accuracy.update(prediction, label)\n\n        avg_loss= total_loss/ len(dataloader)\n        accuracy= test_accuracy.compute()*100\n    print(f\"Test Loss: {avg_loss:.4f}\")\n    print(f\"Test Accuracy: {accuracy:.2f}\")\n\n    return accuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:40.202030Z","iopub.execute_input":"2025-08-16T19:30:40.202276Z","iopub.status.idle":"2025-08-16T19:30:40.208915Z","shell.execute_reply.started":"2025-08-16T19:30:40.202258Z","shell.execute_reply":"2025-08-16T19:30:40.208368Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"epochs= 25\nfor epoch in range(epochs):\n    print(f\"\\nEpoch {epoch+1}/{epochs}\")\n    train(train_loader, model, loss_function, optimizer)\n    val_acc= validate(val_loader, model, loss_function)\n    scheduler.step(val_acc)\n\ntest(test_loader, model, loss_function)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-16T19:30:54.255921Z","iopub.execute_input":"2025-08-16T19:30:54.256617Z","iopub.status.idle":"2025-08-16T19:56:12.790146Z","shell.execute_reply.started":"2025-08-16T19:30:54.256592Z","shell.execute_reply":"2025-08-16T19:56:12.789375Z"}},"outputs":[{"name":"stdout","text":"\nEpoch 1/25\nTraining Average Loss: 0.2511\nValidation Loss: 1.1645\nValidation Accuracy: 62.50\n\nEpoch 2/25\nTraining Average Loss: 0.1993\nValidation Loss: 1.9048\nValidation Accuracy: 56.25\n\nEpoch 3/25\nTraining Average Loss: 0.1635\nValidation Loss: 1.8374\nValidation Accuracy: 62.50\n\nEpoch 4/25\nTraining Average Loss: 0.1459\nValidation Loss: 1.3511\nValidation Accuracy: 68.75\n\nEpoch 5/25\nTraining Average Loss: 0.1134\nValidation Loss: 0.8083\nValidation Accuracy: 75.00\n\nEpoch 6/25\nTraining Average Loss: 0.1053\nValidation Loss: 1.2425\nValidation Accuracy: 75.00\n\nEpoch 7/25\nTraining Average Loss: 0.0970\nValidation Loss: 1.0549\nValidation Accuracy: 68.75\n\nEpoch 8/25\nTraining Average Loss: 0.0940\nValidation Loss: 0.6665\nValidation Accuracy: 75.00\n\nEpoch 9/25\nTraining Average Loss: 0.0889\nValidation Loss: 0.6476\nValidation Accuracy: 68.75\n\nEpoch 10/25\nTraining Average Loss: 0.0758\nValidation Loss: 0.8719\nValidation Accuracy: 68.75\n\nEpoch 11/25\nTraining Average Loss: 0.0774\nValidation Loss: 0.7101\nValidation Accuracy: 81.25\n\nEpoch 12/25\nTraining Average Loss: 0.0781\nValidation Loss: 0.3112\nValidation Accuracy: 81.25\n\nEpoch 13/25\nTraining Average Loss: 0.0690\nValidation Loss: 0.4922\nValidation Accuracy: 75.00\n\nEpoch 14/25\nTraining Average Loss: 0.0527\nValidation Loss: 0.4209\nValidation Accuracy: 81.25\n\nEpoch 15/25\nTraining Average Loss: 0.0644\nValidation Loss: 0.4948\nValidation Accuracy: 75.00\n\nEpoch 16/25\nTraining Average Loss: 0.0569\nValidation Loss: 0.4144\nValidation Accuracy: 81.25\n\nEpoch 17/25\nTraining Average Loss: 0.0522\nValidation Loss: 0.3209\nValidation Accuracy: 81.25\n\nEpoch 18/25\nTraining Average Loss: 0.0395\nValidation Loss: 0.6566\nValidation Accuracy: 81.25\n\nEpoch 19/25\nTraining Average Loss: 0.0290\nValidation Loss: 0.1642\nValidation Accuracy: 93.75\n\nEpoch 20/25\nTraining Average Loss: 0.0346\nValidation Loss: 1.0170\nValidation Accuracy: 62.50\n\nEpoch 21/25\nTraining Average Loss: 0.0239\nValidation Loss: 0.1146\nValidation Accuracy: 93.75\n\nEpoch 22/25\nTraining Average Loss: 0.0202\nValidation Loss: 0.1999\nValidation Accuracy: 93.75\n\nEpoch 23/25\nTraining Average Loss: 0.0256\nValidation Loss: 0.3091\nValidation Accuracy: 81.25\n\nEpoch 24/25\nTraining Average Loss: 0.0213\nValidation Loss: 0.4498\nValidation Accuracy: 81.25\n\nEpoch 25/25\nTraining Average Loss: 0.0257\nValidation Loss: 0.5922\nValidation Accuracy: 81.25\nTest Loss: 1.2258\nTest Accuracy: 79.81\n","output_type":"stream"},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"tensor(79.8077, device='cuda:0')"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}